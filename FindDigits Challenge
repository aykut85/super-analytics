import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the findDigits function below.
  	 static int findDigits(int n) {
	        
	    	int count = 0;
	    	int length_num =0;
	    	final int real_number = n;
	    	
	    	
	    	
	    	length_num = (int) (Math.log10(n) + 1);
	    	
	    	//System.out.println(length_num);
	    	
	    	int [] harray = new int[length_num]; 

	 
	    //	System.out.println(n);
	    	
	    	for(int i=0;i<length_num;i++){
	    		harray[length_num-1-i]=n%10;
	    		//System.out.println(harray[length_num-1-i]);
	    		
	    		if(harray[length_num-1-i]!=0 && real_number%harray[length_num-1-i]==0){
	    			//System.out.println(n%harray[length_num-1-i]);
	    			count++;
	    		}
	    		
	    		n /= 10;
	    		//System.out.println(n);
	    	}
	    	
	    	
	    	//for(int arr:harray)
	    		//System.out.println(arr);
	    	
	    	
	    	return count;
	    	
	    	
	    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int result = findDigits(n);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
